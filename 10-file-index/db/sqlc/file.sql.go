// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: file.sql

package db

import (
	"context"
	"time"
)

const insertFile = `-- name: InsertFile :one
INSERT INTO file (
  name,
  extension,
  size,
  path,
  attributes,
  content,
  created_at,
  modified_at,
  accessed_at
) VALUES (
  $1, $2, $3, $4, $5, $6, $7, $8, $9
) RETURNING id, name, extension, size, path, created_at, modified_at, accessed_at, attributes, content
`

type InsertFileParams struct {
	Name       string    `json:"name"`
	Extension  string    `json:"extension"`
	Size       int64     `json:"size"`
	Path       string    `json:"path"`
	Attributes string    `json:"attributes"`
	Content    string    `json:"content"`
	CreatedAt  time.Time `json:"created_at"`
	ModifiedAt time.Time `json:"modified_at"`
	AccessedAt time.Time `json:"accessed_at"`
}

func (q *Queries) InsertFile(ctx context.Context, arg InsertFileParams) (File, error) {
	row := q.db.QueryRowContext(ctx, insertFile,
		arg.Name,
		arg.Extension,
		arg.Size,
		arg.Path,
		arg.Attributes,
		arg.Content,
		arg.CreatedAt,
		arg.ModifiedAt,
		arg.AccessedAt,
	)
	var i File
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Extension,
		&i.Size,
		&i.Path,
		&i.CreatedAt,
		&i.ModifiedAt,
		&i.AccessedAt,
		&i.Attributes,
		&i.Content,
	)
	return i, err
}
