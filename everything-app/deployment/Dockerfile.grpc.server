# First stage: Build the application
FROM golang:latest AS builder

# Set the Current Working Directory inside the container
WORKDIR /app

COPY go.mod go.sum ./
RUN go mod download

# Copy the source code into the container
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -o /app/main ./file-index/cmd/server/main.go

# Second stage: Create a minimal image with only the executable
FROM alpine:latest

# Set up a working directory
WORKDIR /app

# add timezone hochiminh
RUN apk add --no-cache tzdata

ENV TZ=Asia/Ho_Chi_Minh

# Copy the built executable from the builder stage
COPY --from=builder /app/main .
COPY --from=builder /app/cert ./cert
# Expose the application port
EXPOSE 8080

ENTRYPOINT [ "./main" ]